---

- name: Set correct cluster and user in kubeconfig
  ansible.builtin.shell: |
    sed -i 's/name: default/name: {{ "prodlab" if "prod" in inventory_hostname else "pplab" }}/g' /etc/rancher/k3s/k3s.yaml
    sed -i 's/cluster: ""/cluster: {{ "prodlab" if "prod" in inventory_hostname else "pplab" }}/g' /etc/rancher/k3s/k3s.yaml
    sed -i '/contexts:/,/current-context:/s/cluster: .*/cluster: {{ "prodlab" if "prod" in inventory_hostname else "pplab" }}/' /etc/rancher/k3s/k3s.yaml
    sed -i 's/current-context: default/current-context: {{ "prodlab" if "prod" in inventory_hostname else "pplab" }}/g' /etc/rancher/k3s/k3s.yaml
    sed -i '/users:/,/contexts:/s/name: .*/name: {{ new_admin_user }}/' /etc/rancher/k3s/k3s.yaml
    sed -i '/contexts:/,/current-context:/s/user: .*/user: {{ new_admin_user }}/' /etc/rancher/k3s/k3s.yaml

- name: "Kube configuration for {{ new_admin_user }} user"
  block:
    - name: Create the .kube directory if it does not exist
      ansible.builtin.file:
        path: "/home/{{ new_admin_user }}/.kube"
        state: directory
        owner: "{{ new_admin_user }}"
        group: "{{ new_admin_user }}"
        mode: '0700'

    - name: Copy K3s kubeconfig to user's .kube/config
      ansible.builtin.copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "/home/{{ new_admin_user }}/.kube/config"
        owner: "{{ new_admin_user }}"
        group: "{{ new_admin_user }}"
        mode: '0644'
        remote_src: true

    - name: Set permissions for .kube/config
      ansible.builtin.file:
        path: "/home/{{ new_admin_user }}/.kube/config"
        owner: "{{ new_admin_user }}"
        group: "{{ new_admin_user }}"
        mode: '0600'

    - name: Set KUBECONFIG environment variables in the user's shell profile
      lineinfile:
        path: "/home/{{ new_admin_user }}/{{ ansible_env.SHELL | regex_replace('.*/', '.') }}rc"
        line: |
          export KUBECONFIG=$(find $HOME/.kube -type f -name "config*" | tr '\n' ':')
        create: yes
  become: false
